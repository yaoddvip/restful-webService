<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mr</groupId>
    <artifactId>webservice-01-client</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <!-- 定义属性  在下面的标签中，我们可以通过${属性名} 可以获取到我们定义的属性-->
    <properties>
        <junit.version>4.12</junit.version>
        <spring.version>4.2.3.RELEASE</spring.version>
        <mybatis.version>3.2.8</mybatis.version>
        <mybatis.spring.version>1.2.2</mybatis.spring.version>
        <mybatis.paginator.version>1.2.15</mybatis.paginator.version>
        <mysql.version>5.1.32</mysql.version>
        <slf4j.version>1.6.4</slf4j.version>
        <jackson.version>2.4.2</jackson.version>
        <druid.version>1.0.9</druid.version>
        <httpclient.version>4.5.5</httpclient.version>
        <jstl.version>1.2</jstl.version>
        <servlet-api.version>2.5</servlet-api.version>
        <jsp-api.version>2.0</jsp-api.version>
        <joda-time.version>2.5</joda-time.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <commons-io.version>1.3.2</commons-io.version>
        <commons-net.version>3.3</commons-net.version>
        <pagehelper.version>5.0.0</pagehelper.version>
        <jsqlparser.version>0.9.1</jsqlparser.version>
        <lombok.version>1.16.20</lombok.version>
        <poi.version>3.17</poi.version>
        <mail.version>1.4.7</mail.version>
        <commons-fileupload.version>1.3.1</commons-fileupload.version>
        <commons-logging.version>1.1.1</commons-logging.version>
        <httpcore.version>4.4.1</httpcore.version>
        <jedis.version>2.9.0</jedis.version>
    </properties>

    <dependencies>
        <!-- Part 1 -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>2.23.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>2.23.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>2.23.2</version>
        </dependency>

        <!-- Part 2：支持Json格式 ，否则会报： MessageBodyWriter not found for media type=application/json ... 的错误 -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>2.23.2</version>
        </dependency>

        <!-- Part 3：支持复杂的Json格式翻译，例如Map<K,E>，当然我们也可以使用Gson -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>2.23.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.8.1</version>
        </dependency>

        <!-- Part 4: 支持XML格式，否则会报MessageBodyWriter not found for media type=application/xml....-->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-xml-provider</artifactId>
            <version>2.8.1</version>
        </dependency>
    </dependencies>

</project>